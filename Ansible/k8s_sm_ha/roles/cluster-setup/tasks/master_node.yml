- name: move etcd certificates on all master
  ansible.builtin.shell: |
    chown -R root:root /home/{{ansible_user}}/ca.crt /home/{{ansible_user}}/apiserver-etcd-client.crt /home/{{ansible_user}}/apiserver-etcd-client.key
    mkdir -p /etc/kubernetes/pki/etcd
    mv /home/{{ansible_user}}/ca.crt /etc/kubernetes/pki/etcd/ca.crt
    mv /home/{{ansible_user}}/apiserver-etcd-client.crt /etc/kubernetes/pki/apiserver-etcd-client.crt
    mv /home/{{ansible_user}}/apiserver-etcd-client.key /etc/kubernetes/pki/apiserver-etcd-client.key

- name: template kubeadm-config on master0
  ansible.builtin.template:
    src: ./templates/kubeadm-config.j2
    dest: /etc/kubernetes/kubeadm-config.yaml
    owner: root
    group: root
    mode: "0644"
  run_once: true

- name: init kubernetes cluster on master0 (1/2)
  ansible.builtin.shell: |
    kubeadm init --config /etc/kubernetes/kubeadm-config.yaml --upload-certs --ignore-preflight-errors="NumCPU"
  register: kubeadm_join_master_out
  run_once: true

- name: init kubernetes cluster on master0 (2/2)
  ansible.builtin.shell: |
    echo "export KUBECONFIG=/etc/kubernetes/admin.conf" >> /etc/environment
  run_once: true

- name: install CNI (1/2)
  ansible.builtin.template:
    src: ./templates/cni-flannel.j2
    dest: /tmp/cni-flannel.yml
    owner: root
    group: root
    mode: "0644"
  run_once: true

- name: install CNI (2/2)
  ansible.builtin.shell: |
    kubectl apply -f /tmp/cni-flannel.yml
  run_once: true

- name: generate join token var on master0
  ansible.builtin.shell: |
    kubeadm token create --print-join-command
  register: kubeadm_join_out
  run_once: true

- name: set kubeadm_join var
  ansible.builtin.set_fact:
    kubeadm_join: "{{kubeadm_join_out.stdout}}"
  run_once: true

- name: generate CA key var on master0
  ansible.builtin.shell: |
    kubeadm init phase upload-certs --upload-certs --config /etc/kubernetes/kubeadm-config.yaml | tail -n -1
  register: kubeadm_ca_key_out
  run_once: true

- name: set kubeadm_ca_key var
  ansible.builtin.set_fact:
    kubeadm_ca_key: "{{kubeadm_ca_key_out.stdout}}"
  run_once: true

- name: join other master to cluster
  ansible.builtin.shell: |
    kubeadm join {{hostvars[groups['haproxy'][0]].inventory_hostname}}:6443 --token {{hostvars[groups['master'][0]]['kubeadm_join'].split(' ')[4] | lower}} --discovery-token-ca-cert-hash {{hostvars[groups['master'][0]]['kubeadm_join'].split(' ')[6] | lower}} --control-plane --certificate-key {{hostvars[groups['master'][0]]['kubeadm_ca_key']}}
  when: "inventory_hostname == groups['master'][1] or inventory_hostname == groups['master'][2]"